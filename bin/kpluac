#!/usr/bin/env php
<?php
/**
 * happy coding.
 */

use Kplua\Utils\Transform;
use Polynds\BinaryParse\Binary;
use Polynds\BinaryParse\ByteOrder;

require_once __DIR__ . '/../vendor/autoload.php';

$filename = __DIR__ . '/../tests/luac.out';
$data = Binary::stream($filename);

var_dump(0x5678);

$reader = new \Polynds\BinaryParse\Reader($data);
var_dump(\Polynds\BinaryParse\ByteOrder::checkOrder());
//var_dump(\Kplua\Utils\Transform::ascll2Str([
//    $reader->readUInt8(),
//    $reader->readUInt8(),
//    $reader->readUInt8(),
//    $reader->readUInt8(),
//]));
//var_dump($reader->readUInt8());
//var_dump($reader->readUInt8());
$reader->skip(6);
var_dump('-------------');
//var_dump(Transform::ascll2Hex([
//    $reader->readUInt8(),
//    $reader->readUInt8(),
//]));
//var_dump(Transform::ASCII2ControlChar([
//    $reader->readUInt8(),
//    $reader->readUInt8(),
//]));
//var_dump(Transform::ascll2Str([
//    $reader->readUInt8(),
//]));
//var_dump(Transform::ASCII2ControlChar([
//    $reader->readUInt8(),
//]));

$reader->skip(11);

var_dump('----------------');
var_dump($reader->readUInt64());
var_dump($reader->readDouble());

//var_dump($reader->readUInt8());
//var_dump($reader->readUInt8());
//var_dump($reader->readUInt8());
//var_dump($reader->readUInt8());
//var_dump($reader->readUInt8());
//var_dump($reader->readUInt8());
//var_dump($reader->readUInt8());

exit;

$strArr = unpack('H8', $data);
var_dump(hex2bin($strArr[1]), '0x' . $strArr[1] == 0x1B4C7561);
exit;

$read = new \Polynds\BinaryParse\Reader($data);
var_dump($read->readSpacePaddedStr(4));
exit;

// TODO 很奇怪，PHP的这个unpack函数为啥非要按照所需字节数x2来识别数据呢？不知道跟系统64位有没有关系，毕竟现在32位的系统很少用了
$header_format =
    'H8signature/' . # TODO 为啥是8字节的呢？是不是跟机器是64位的有关系？那么在32位机器上是不是H4呢
    'H2version/' .
    'H2format/' .
    'H12luacData/' .
    'H2cintSize/' .
    'H2sizetSize/' .
    'H2instructionSize/' .
    'H2luaIntergerSize/' .
    'H2luaNumberSize/' .
    'H16luacInt/' . // 这里的16是从luaIntergerSize所占用字节数x2来的
    'dluacNum/' .
    'H2no/' .
    'ISourceLength/' .
    'A32Source';
$header = unpack($header_format, $data);
var_dump($header);
var_dump('-----------------');
var_dump(unpack('x4/H2', $data));
var_dump(unpack('x35/A32Source', $data));
var_dump('-----------------');
